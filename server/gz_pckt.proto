// This proto file provides the 
//  necessary fields to send
//  data regarding the GZ.
//  

package PB_MSG;

message GZPacket {

  required uint64 time = 1;
  optional uint32 ticks = 7;

  repeated Cpu cpu = 2;
  repeated Mem mem = 3;
  repeated Disk disk = 4;
  repeated Net net = 5;
  repeated Process process = 6;
  repeated CallHeat callheat = 8;
  optional uint32 threads = 9;
  optional uint32 processes = 10;

  message Process {
    optional uint32 pid = 1;
    optional string execname = 2;
    optional uint32 usage = 3;
    optional uint32 cpu = 4;
  }

  message Cpu {
    optional uint32 core = 1;
    optional uint32 usage = 2;
  }

  message Mem {
    optional uint64 physmem = 1;
    optional uint64 pp_kernel = 2;
    optional uint64 physcap = 3;
    optional uint64 freemem = 4;
    optional uint64 nalloc_calls = 5;
    optional uint64 nfree_calls = 6;
 }

  message Net {
    required string instance = 1;
    optional uint32 obytes64_1 = 2;
    optional uint32 rbytes64_1 = 3;
    optional uint32 opackets_1 = 4;
    optional uint32 ipackets_1 = 5;
    optional uint32 obytes64_2 = 6;
    optional uint32 rbytes64_2 = 7;
    optional uint32 opackets_2 = 8;
    optional uint32 ipackets_2 = 9;
    optional uint32 ierrors = 10;
    optional uint32 oerrors = 11;
  }

  message Disk {
    required uint32 instance = 1;
    optional uint64 nread = 2;
    optional uint64 nwritten = 3;
    optional uint32 reads = 4;
    optional uint32 writes = 5;
    optional uint64 wtime = 6;
    optional uint64 wlentime = 7;
    optional uint64 rtime = 8;
    optional uint64 rlentime = 9;
    optional uint32 harderror = 10;
    optional uint32 softerror = 11;
    optional uint32 tranerror = 12;
 }

  message CallHeat {
    required string name = 1;
    optional uint32 lowt_1 = 2;
    optional uint32 value_1 = 3;
    optional uint32 lowt_2 = 4;
    optional uint32 value_2 = 5;
  }

}
